<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="25370" started-at="2020-05-07T13:11:48 MDT" finished-at="2020-05-07T13:12:13 MDT">
    <groups>
    </groups>
    <test name="Test" duration-ms="25370" started-at="2020-05-07T13:11:48 MDT" finished-at="2020-05-07T13:12:13 MDT">
      <class name="com.regression.Test_2">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.regression.Test_2@29cfd92b]" name="beforeMethod" is-config="true" duration-ms="281" started-at="2020-05-07T13:11:48 MDT" finished-at="2020-05-07T13:11:48 MDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f()[pri:0, instance:com.regression.Test_2@29cfd92b]" name="f" duration-ms="23931" started-at="2020-05-07T13:11:48 MDT" finished-at="2020-05-07T13:12:12 MDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.regression.Test_2@29cfd92b]" name="AfterMethod" is-config="true" duration-ms="1095" started-at="2020-05-07T13:12:12 MDT" finished-at="2020-05-07T13:12:13 MDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- com.regression.Test_2 -->
      <class name="com.regression.Test_1">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.regression.Test_1@5cc69cfe]" name="beforeMethod" is-config="true" duration-ms="281" started-at="2020-05-07T13:11:48 MDT" finished-at="2020-05-07T13:11:48 MDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="f()[pri:0, instance:com.regression.Test_1@5cc69cfe]" name="f" duration-ms="6694" started-at="2020-05-07T13:11:48 MDT" finished-at="2020-05-07T13:11:55 MDT">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.regression.Test_1.f(Test_1.java:21)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.regression.Test_1@5cc69cfe]" name="AfterMethod" is-config="true" duration-ms="1271" started-at="2020-05-07T13:11:55 MDT" finished-at="2020-05-07T13:11:56 MDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- com.regression.Test_1 -->
      <class name="com.regression.Flight_Test_Singleton">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.regression.Flight_Test_Singleton@21c64522]" name="beforeMethod" is-config="true" duration-ms="281" started-at="2020-05-07T13:11:48 MDT" finished-at="2020-05-07T13:11:48 MDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="h()[pri:0, instance:com.regression.Flight_Test_Singleton@21c64522]" name="h" duration-ms="9" started-at="2020-05-07T13:11:48 MDT" finished-at="2020-05-07T13:11:48 MDT">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[This is the exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: This is the exception
at com.regression.Flight_Test_Singleton.h(Flight_Test_Singleton.java:17)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- h -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.regression.Flight_Test_Singleton@21c64522]" name="AfterMethod" is-config="true" duration-ms="1031" started-at="2020-05-07T13:11:48 MDT" finished-at="2020-05-07T13:11:49 MDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- com.regression.Flight_Test_Singleton -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
